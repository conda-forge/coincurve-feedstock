--- setup_support.py    2024-03-01 23:10:59.000000000 -0600
+++ setup_support.py    2024-03-03 10:28:59.492391934 -0600
@@ -37,37 +37,52 @@
     return op.realpath(op.abspath(op.join(op.dirname(__file__), *paths)))


-def build_flags(library, type_, path):
+def _update_pkg_config_path(path='.'):
     """Return separated build flags from pkg-config output"""

     pkg_config_path = [path]
     if 'PKG_CONFIG_PATH' in os.environ:
-        pkg_config_path.append(os.environ['PKG_CONFIG_PATH'])
+        pkg_config_path.append(os.environ['PKG_CONFIG_PATH'].strip('"'))
+    if 'CONDA_PREFIX' in os.environ:
+        pkg_config_path.extend(
+            [p for p in (
+                os.path.join(os.environ['CONDA_PREFIX'], 'lib', 'pkgconfig'),
+                os.path.join(os.environ['CONDA_PREFIX'], 'lib64', 'pkgconfig'),
+                os.path.join(os.environ['CONDA_PREFIX'], 'Library', 'lib', 'pkgconfig'),
+            ) if os.path.isdir(p)
+            ]
+        )
     if 'LIB_DIR' in os.environ:
         pkg_config_path.append(os.environ['LIB_DIR'])
         pkg_config_path.append(os.path.join(os.environ['LIB_DIR'], 'pkgconfig'))

+    # Update environment
+    os.environ['PKG_CONFIG_PATH'] = str(os.pathsep).join(pkg_config_path)
+
+
+def build_flags(library, type_, path):
+    """Return separated build flags from pkg-config output"""
+
+    _update_pkg_config_path(path)
+
     options = {'I': '--cflags-only-I', 'L': '--libs-only-L', 'l': '--libs-only-l'}
-    env = dict(os.environ, PKG_CONFIG_PATH=':'.join(pkg_config_path))
-    flags = subprocess.check_output(['pkg-config', '--static', options[type_], library], env=env)  # noqa S603
+    flags = subprocess.check_output(['pkg-config', '--static', options[type_], library])  # noqa S603
     flags = list(flags.decode('UTF-8').split())

     return [flag.strip(f'-{type_}') for flag in flags]


 def _find_lib():
-    if 'COINCURVE_IGNORE_SYSTEM_LIB' in os.environ:
+    if os.getenv('COINCURVE_IGNORE_SYSTEM_LIB', '1') == '1':
         return False

     from cffi import FFI

+    _update_pkg_config_path()
+
     try:
         subprocess.check_output(['pkg-config', '--exists', 'libsecp256k1'])  # noqa S603
-
-        includes = subprocess.check_output(['pkg-config', '--cflags-only-I', 'libsecp256k1'])  # noqa S603
-        includes = includes.strip().decode('utf-8')
-
-        return os.path.exists(os.path.join(includes[2:], 'secp256k1_ecdh.h'))
+        return True

     except (OSError, subprocess.CalledProcessError):
         if 'LIB_DIR' in os.environ:
@@ -83,6 +98,8 @@


 def has_system_lib():
+    import logging
+
     global _has_system_lib
     if _has_system_lib is None:
         _has_system_lib = _find_lib()
